<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="memory_8h" kind="file" language="C++">
    <compoundname>memory.h</compoundname>
    <innerclass refid="structOS__MEMORY__AT__ADDR__INFORMATION" prot="public">OS_MEMORY_AT_ADDR_INFORMATION</innerclass>
    <sectiondef kind="enum">
      <member refid="group__OS__APIS__MEMORY_1ga8b1f83ef2e6ff5fd685c9beb6249fbec" kind="enum"><name>OS_PAGE_PROTECTION_TYPE</name></member>
      <member refid="group__OS__APIS__MEMORY_1gac040a9da8f2a5ffbefe23e96a14b97f3" kind="enum"><name>OS_MEMORY_FLAGS</name></member>
    </sectiondef>
    <sectiondef kind="func">
      <member refid="group__OS__APIS__MEMORY_1ga292fe0be7839ed9cc970254d288bb199" kind="function"><name>OS_AllocateMemory</name></member>
      <member refid="group__OS__APIS__MEMORY_1ga8e79ecf1778b1d8e8488f15a28b1caea" kind="function"><name>OS_MapFileToMemory</name></member>
      <member refid="group__OS__APIS__MEMORY_1gaa54a94130bdeef23bf5e9b4666e6c430" kind="function"><name>OS_FreeMemory</name></member>
      <member refid="group__OS__APIS__MEMORY_1gaa76c49aabf3c8fdbfca2bf7a1d52a15e" kind="function"><name>OS_GetPageSize</name></member>
      <member refid="group__OS__APIS__MEMORY_1ga66948315f215e7db3099719f7c81df3d" kind="function"><name>OS_QueryMemory</name></member>
      <member refid="group__OS__APIS__MEMORY_1ga735acbcf7139e9d3a45988005a98854d" kind="function"><name>OS_ProtectMemory</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2013-2023<sp/>Intel<sp/>Corporation.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>MIT</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;COMPONENT&gt;:<sp/>os-apis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;FILE-TYPE&gt;:<sp/>component<sp/>public<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OS_APIS_MEMORY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OS_APIS_MEMORY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_PAGE_PROTECTION_TYPE_NOACCESS<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_PAGE_PROTECTION_TYPE_READ<sp/><sp/><sp/><sp/><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>0),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_PAGE_PROTECTION_TYPE_WRITE<sp/><sp/><sp/><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>1),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_PAGE_PROTECTION_TYPE_EXECUTE<sp/><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>2),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_PAGE_PROTECTION_TYPE_GUARD<sp/><sp/><sp/><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>3)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<sp/><ref refid="group__OS__APIS__MEMORY_1ga8b1f83ef2e6ff5fd685c9beb6249fbec" kindref="member">OS_PAGE_PROTECTION_TYPE</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structOS__MEMORY__AT__ADDR__INFORMATION" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>VOID*<sp/>BaseAddress;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TARGET_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>VOID*<sp/>AllocationBase;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>USIZE<sp/>MapSize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/>Shared;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__OS__APIS__MEMORY_1ga8b1f83ef2e6ff5fd685c9beb6249fbec" kindref="member">OS_PAGE_PROTECTION_TYPE</ref><sp/>Protection;<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/>Type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/><ref refid="structOS__MEMORY__AT__ADDR__INFORMATION" kindref="compound">OS_MEMORY_AT_ADDR_INFORMATION</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__OS__APIS__MEMORY_1ggac040a9da8f2a5ffbefe23e96a14b97f3ae03e654a5ec0b7b46ce676a877ae9a58" kindref="member">OS_MEMORY_FLAGS_PRIVATE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__OS__APIS__MEMORY_1ggac040a9da8f2a5ffbefe23e96a14b97f3ae650122f14758006ab0d3566e3b50eb6" kindref="member">OS_MEMORY_FLAGS_FIXED_ADDRESS</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>0),<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__OS__APIS__MEMORY_1ggac040a9da8f2a5ffbefe23e96a14b97f3a911ef878523ce89b1ff21f883b66a251" kindref="member">OS_MEMORY_FLAGS_STACK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>1),<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__OS__APIS__MEMORY_1ggac040a9da8f2a5ffbefe23e96a14b97f3a94c6b592e34b15103e0b48f4563d89c7" kindref="member">OS_MEMORY_FLAGS_SHARED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>3)<sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/><ref refid="group__OS__APIS__MEMORY_1gac040a9da8f2a5ffbefe23e96a14b97f3" kindref="member">OS_MEMORY_FLAGS</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="struct__OS__RETURN__CODE" kindref="compound">OS_RETURN_CODE</ref><sp/><ref refid="group__OS__APIS__MEMORY_1ga292fe0be7839ed9cc970254d288bb199" kindref="member">OS_AllocateMemory</ref>(<ref refid="group__OS__APIS__TYPES_1gae6c37d3a178129452bbb6e591c13aeb0" kindref="member">NATIVE_PID</ref><sp/>processId,<sp/>UINT<sp/>protectionType,<sp/>USIZE<sp/>size,<sp/><ref refid="group__OS__APIS__MEMORY_1gac040a9da8f2a5ffbefe23e96a14b97f3" kindref="member">OS_MEMORY_FLAGS</ref><sp/>flags,<sp/>VOID**<sp/>base);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="struct__OS__RETURN__CODE" kindref="compound">OS_RETURN_CODE</ref><sp/><ref refid="group__OS__APIS__MEMORY_1ga8e79ecf1778b1d8e8488f15a28b1caea" kindref="member">OS_MapFileToMemory</ref>(<ref refid="group__OS__APIS__TYPES_1gae6c37d3a178129452bbb6e591c13aeb0" kindref="member">NATIVE_PID</ref><sp/>processId,<sp/>UINT<sp/>protectionType,<sp/>USIZE<sp/>size,<sp/><ref refid="group__OS__APIS__MEMORY_1gac040a9da8f2a5ffbefe23e96a14b97f3" kindref="member">OS_MEMORY_FLAGS</ref><sp/>flags,<sp/><ref refid="group__OS__APIS__TYPES_1gaeb77513b3223d163064c7b1f5e38e8c3" kindref="member">NATIVE_FD</ref><sp/>fd,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT64<sp/>offset,<sp/>VOID**<sp/>base);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="struct__OS__RETURN__CODE" kindref="compound">OS_RETURN_CODE</ref><sp/><ref refid="group__OS__APIS__MEMORY_1gaa54a94130bdeef23bf5e9b4666e6c430" kindref="member">OS_FreeMemory</ref>(<ref refid="group__OS__APIS__TYPES_1gae6c37d3a178129452bbb6e591c13aeb0" kindref="member">NATIVE_PID</ref><sp/>processId,<sp/>VOID*<sp/>base,<sp/>USIZE<sp/>size);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="struct__OS__RETURN__CODE" kindref="compound">OS_RETURN_CODE</ref><sp/><ref refid="group__OS__APIS__MEMORY_1gaa76c49aabf3c8fdbfca2bf7a1d52a15e" kindref="member">OS_GetPageSize</ref>(USIZE*<sp/>size);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="struct__OS__RETURN__CODE" kindref="compound">OS_RETURN_CODE</ref><sp/><ref refid="group__OS__APIS__MEMORY_1ga66948315f215e7db3099719f7c81df3d" kindref="member">OS_QueryMemory</ref>(<ref refid="group__OS__APIS__TYPES_1gae6c37d3a178129452bbb6e591c13aeb0" kindref="member">NATIVE_PID</ref><sp/>processId,<sp/>VOID*<sp/>memoryAddr,<sp/><ref refid="structOS__MEMORY__AT__ADDR__INFORMATION" kindref="compound">OS_MEMORY_AT_ADDR_INFORMATION</ref>*<sp/>info);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><ref refid="struct__OS__RETURN__CODE" kindref="compound">OS_RETURN_CODE</ref><sp/><ref refid="group__OS__APIS__MEMORY_1ga735acbcf7139e9d3a45988005a98854d" kindref="member">OS_ProtectMemory</ref>(<ref refid="group__OS__APIS__TYPES_1gae6c37d3a178129452bbb6e591c13aeb0" kindref="member">NATIVE_PID</ref><sp/>processId,<sp/>VOID*<sp/>base,<sp/>USIZE<sp/>size,<sp/>UINT<sp/>newProtectionType);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>file<sp/>guard</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="Source/os-apis/00-export-include/os-apis/memory.h"/>
  </compounddef>
</doxygen>
